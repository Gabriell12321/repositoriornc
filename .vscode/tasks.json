{
	// Unified tasks file
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Git: Commit+Push (linguagens pronta)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-NonInteractive",
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"${workspaceFolder}\\.vscode\\push-linguagens.ps1",
				"-Message",
				"linguagens pronta"
			],
			"options": { "cwd": "${workspaceFolder}" }
		},
		{
			"label": "Git: Commit+Push (descriptive via cmd)",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"\"${workspaceFolder}\\scripts\\commit_and_push_descriptive.bat\""
			],
			"options": { "cwd": "${workspaceFolder}" },
			"problemMatcher": [],
			"presentation": { "reveal": "always", "panel": "dedicated" }
		},
		{
			"label": "Git: Commit e Push - organização de pasta",
			"type": "shell",
			"command": "cmd",
			"args": ["/d", "/c", ".vscode\\commit_and_push_oranizacao_pasta.bat"],
			"options": { "cwd": "${workspaceFolder}" },
			"problemMatcher": [],
			"presentation": { "reveal": "always", "panel": "dedicated" }
		},
		{
			"label": "Git: Push HEAD to origin (cmd)",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"cd /d \"${workspaceFolder}\" && echo PWD: && cd && echo. && echo REMOTES: && git --no-pager remote -v && echo. && echo BRANCH: && git rev-parse --abbrev-ref HEAD && echo. && echo PUSHING HEAD to origin... && git push -u origin HEAD"
			],
			"options": { "cwd": "${workspaceFolder}" },
			"problemMatcher": [],
			"presentation": { "reveal": "always", "panel": "dedicated" }
		},
		{
			"label": "Organizar - Dry Run",
			"type": "shell",
			"command": "python",
			"args": ["organize_root.py", "--dry-run"],
			"options": { "cwd": "${workspaceFolder}" },
			"problemMatcher": []
		},
		{
			"label": "Organizar - Aplicar (sem JSON)",
			"type": "shell",
			"command": "python",
			"args": ["organize_root.py"],
			"options": { "cwd": "${workspaceFolder}" },
			"problemMatcher": []
		},
		{
			"label": "Organizar - Aplicar (inclusive JSON)",
			"type": "shell",
			"command": "python",
			"args": ["organize_root.py", "--move-json"],
			"options": { "cwd": "${workspaceFolder}" },
			"problemMatcher": []
		},
		{
			"label": "Git: Push versão atual para origin",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"cd /d \"${workspaceFolder}\" && echo === STATUS ATUAL === && git status -sb && echo. && echo === REMOTES === && git remote -v && echo. && echo === BRANCH === && git rev-parse --abbrev-ref HEAD && echo. && echo === PUSH === && git push origin HEAD"
			],
			"options": { "cwd": "${workspaceFolder}" },
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "Git: Commit+Push (mensagem via cmd)",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"\"${workspaceFolder}\\scripts\\commit_and_push.bat\" atualização julia"
			],
			"options": { "cwd": "${workspaceFolder}" },
			"problemMatcher": [],
			"presentation": { "reveal": "always", "panel": "dedicated" }
		},
		{
			"label": "Git: Commit+Push (perguntar mensagem)",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"\"${workspaceFolder}\\scripts\\enviar github.bat\""
			],
			"options": { "cwd": "${workspaceFolder}" },
			"problemMatcher": [],
			"presentation": { "reveal": "always", "panel": "dedicated" }
		},
		{
			"label": "Julia: Instalar deps (Pkg.instantiate)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-NonInteractive",
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"& { Set-Location -LiteralPath '${workspaceFolder}\\services\\julia_analytics'; julia --project=. -e \"using Pkg; Pkg.instantiate();\" }"
			],
			"options": { "cwd": "${workspaceFolder}" }
		},
		{
			"label": "Julia: Rodar serviço (server.jl)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"& { Set-Location -LiteralPath '${workspaceFolder}\\services\\julia_analytics'; $env:JULIA_ANALYTICS_ADDR='127.0.0.1:8082'; julia --project=. src/server.jl }"
			],
			"options": { "cwd": "${workspaceFolder}" }
		},
		{
			"label": "Julia: Testes (Pkg.test)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-NoProfile",
				"-NonInteractive",
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"& { Set-Location -LiteralPath '${workspaceFolder}\\services\\julia_analytics'; julia --project=. -e \"using Pkg; Pkg.test();\" }"
			],
			"options": { "cwd": "${workspaceFolder}" }
		}
		,
		{
			"label": "Iniciar: Rust + Kotlin + Julia + IPPEL",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"\"${workspaceFolder}\\scripts\\iniciar_todos.bat\""
			],
			"options": { "cwd": "${workspaceFolder}" },
			"problemMatcher": [],
			"presentation": { "reveal": "always", "panel": "dedicated" }
		}
	]
}