{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Git: Commit e Push - organização de pasta",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				".vscode\\commit_and_push_oranizacao_pasta.bat"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": [],
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			}
		},
		{
			"label": "Git: Push HEAD to origin (cmd)",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"cd /d \"${workspaceFolder}\" && echo PWD: && cd && echo. && echo REMOTES: && git --no-pager remote -v && echo. && echo BRANCH: && git rev-parse --abbrev-ref HEAD && echo. && echo PUSHING HEAD to origin... && git push -u origin HEAD"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": [],
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			}
		},
		{
			"label": "Organizar - Dry Run",
			"type": "shell",
			"command": "python",
			"args": [
				"organize_root.py",
				"--dry-run"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": []
		},
		{
			"label": "Organizar - Aplicar (sem JSON)",
			"type": "shell",
			"command": "python",
			"args": [
				"organize_root.py"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": []
		},
		{
			"label": "Organizar - Aplicar (inclusive JSON)",
			"type": "shell",
			"command": "python",
			"args": [
				"organize_root.py",
				"--move-json"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": []
		},
		{
			"label": "Git: Push HEAD to origin (cmd)",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"cd /d \"g:\\My Drive\\Trabalhos pendentes\\rncs\\RELATORIO DE NÃO CONFORMIDADE IPPEL\" && echo PWD: && cd && echo. && echo REMOTES: && git --no-pager remote -v || echo (no remotes) && (git remote get-url origin >NUL 2>&1 || git remote add origin https://github.com/Gabriell12321/repositoriornc.git) && echo. && echo REMOTES AFTER: && git --no-pager remote -v && echo. && echo BRANCH: && git rev-parse --abbrev-ref HEAD && echo. && echo STATUS: && git status -sb && echo. && echo PUSH: && git push -u origin HEAD"
			],
			"isBackground": false,
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "Git: Push versão atual para origin",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"cd /d \"${workspaceFolder}\" && echo === STATUS ATUAL === && git status -sb && echo. && echo === REMOTES === && git remote -v && echo. && echo === BRANCH === && git rev-parse --abbrev-ref HEAD && echo. && echo === PUSH === && git push origin HEAD"
			],
			"problemMatcher": [],
			"group": "build"
		},
		{
			"label": "Commit and Push: linguagens pronta",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"cd /d \"G:\\My Drive\\Trabalhos pendentes\\rncs\\RELATORIO DE NÃO CONFORMIDADE IPPEL\" && echo PWD: && cd && echo. && echo STAGING... && git add -A && echo. && echo COMMIT... && git commit -m \"linguagens pronta\" || echo (no changes to commit) && echo. && echo PUSH... && git push -u origin master && echo. && echo LAST LOCAL COMMIT: && git --no-pager log -1 --pretty=oneline && echo. && echo REMOTE MASTER: && git --no-pager ls-remote --heads origin master"
			],
			"problemMatcher": [
				"$git"
			]
		},
		{
			"label": "Commit+Push (linguagens pronta)",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"cd /d \"G:\\My Drive\\Trabalhos pendentes\\rncs\\RELATORIO DE NÃO CONFORMIDADE IPPEL\" && echo PWD: && cd && echo. && echo STAGING... && git add -A && echo. && echo COMMIT... && git commit -m \"linguagens pronta\" || echo (no changes to commit) && echo. && echo PUSH... && git push -u origin master && echo. && echo LAST LOCAL COMMIT: && git --no-pager log -1 --pretty=oneline && echo. && echo REMOTE MASTER: && git --no-pager ls-remote --heads origin master"
			],
			"isBackground": false,
			"problemMatcher": [
				"$git"
			],
			"group": "build"
		},
		{
			"label": "Push to GitHub (non-interactive)",
			"type": "shell",
			"command": "powershell.exe",
			"args": [
				"-NoProfile",
				"-NonInteractive",
				"-ExecutionPolicy",
				"Bypass",
				"-Command",
				"$ErrorActionPreference='Stop'; Set-Location -LiteralPath 'G:\\My Drive\\Trabalhos pendentes\\rncs\\RELATORIO DE NÃO CONFORMIDADE IPPEL'; git add -A; if ((git diff --cached --name-only).Length -eq 0) { Write-Output 'No staged changes'; } else { git commit -m \"chore(push): atualizar mensagem padrao do script para evitar 'linguagens pronta'\"; }; git push origin HEAD:master; git --no-pager log -1 --oneline;"
			],
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"label": "Commit+Push Descriptive (bat)",
			"type": "shell",
			"command": "cmd",
			"args": [
				"/d",
				"/c",
				"\"G:\\My Drive\\Trabalhos pendentes\\rncs\\RELATORIO DE NÃO CONFORMIDADE IPPEL\\scripts\\commit_and_push_descriptive.bat\""
			],
			"isBackground": false,
			"problemMatcher": [],
			"group": "build"
		}
	]
}