openapi: 3.0.3
info:
  title: IPPEL RNC - API de Gest√£o de N√£o Conformidades
  description: |
    API RESTful completa para gest√£o de Relat√≥rios de N√£o Conformidade (RNC) do sistema IPPEL.
    
    ## Funcionalidades Principais
    - üîê Autentica√ß√£o JWT com 2FA opcional
    - üìã CRUD completo de RNCs
    - üë• Gerenciamento de usu√°rios e grupos
    - üîí Sistema de permiss√µes granulares (Field Locks)
    - üìä Analytics e dashboards em tempo real
    - üí¨ Sistema de chat e notifica√ß√µes
    - üìÑ Gera√ß√£o de relat√≥rios (PDF, Excel, CSV)
    
    ## Autentica√ß√£o
    A maioria dos endpoints requer autentica√ß√£o via JWT token no header:
    ```
    Authorization: Bearer {token}
    ```
    
    ## Rate Limiting
    - **Login**: 10 req/min por IP
    - **API Geral**: 120 req/min por usu√°rio
    - **Relat√≥rios**: 30 req/min por usu√°rio
    
    ## Versionamento
    Esta √© a **vers√£o 1.0** da API. Futuras vers√µes ser√£o prefixadas com `/v2/`, `/v3/`, etc.
    
  version: 1.0.0
  contact:
    name: Equipe IPPEL
    email: suporte@ippel.com.br
  license:
    name: Propriet√°rio
    
servers:
  - url: http://localhost:5001
    description: Desenvolvimento local
  - url: https://rnc.ippel.com.br
    description: Produ√ß√£o

tags:
  - name: Authentication
    description: Autentica√ß√£o e gerenciamento de sess√µes
  - name: RNC
    description: Opera√ß√µes de Relat√≥rios de N√£o Conformidade
  - name: Admin
    description: Administra√ß√£o de usu√°rios, grupos e permiss√µes
  - name: Analytics
    description: Dashboards, gr√°ficos e indicadores
  - name: Reports
    description: Gera√ß√£o de relat√≥rios customizados
  - name: Communication
    description: Chat, mensagens e notifica√ß√µes

security:
  - BearerAuth: []

paths:
  # ==================== AUTHENTICATION ====================
  /auth/login:
    post:
      tags: [Authentication]
      summary: Login de usu√°rio
      description: Autentica usu√°rio com email/senha e retorna JWT token
      security: []  # Endpoint p√∫blico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: admin@ippel.com.br
                password:
                  type: string
                  format: password
                  example: admin123
                remember_me:
                  type: boolean
                  default: false
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  refresh_token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                  requires_2fa:
                    type: boolean
                    example: false
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitError'

  /auth/logout:
    post:
      tags: [Authentication]
      summary: Logout de usu√°rio
      description: Invalida token atual e encerra sess√£o
      responses:
        '200':
          description: Logout bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Logout realizado com sucesso

  /auth/2fa/setup:
    get:
      tags: [Authentication]
      summary: Configurar 2FA
      description: Retorna QR code para configura√ß√£o de autentica√ß√£o de dois fatores
      responses:
        '200':
          description: QR code gerado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  qr_code:
                    type: string
                    description: Base64 do QR code
                  secret:
                    type: string
                  backup_codes:
                    type: array
                    items:
                      type: string

  # ==================== RNC ====================
  /api/rnc/create:
    post:
      tags: [RNC]
      summary: Criar nova RNC
      description: Cria um novo Relat√≥rio de N√£o Conformidade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RNCCreate'
      responses:
        '201':
          description: RNC criada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  rnc_id:
                    type: integer
                  rnc_number:
                    type: string
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'

  /api/rnc/list:
    get:
      tags: [RNC]
      summary: Listar RNCs
      description: Retorna lista paginada de RNCs com filtros opcionais
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
        - name: status
          in: query
          schema:
            type: string
            enum: [Pendente, Em Andamento, Finalizado]
        - name: priority
          in: query
          schema:
            type: string
            enum: [Baixa, M√©dia, Alta, Cr√≠tica]
        - name: department
          in: query
          schema:
            type: string
        - name: date_from
          in: query
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          schema:
            type: string
            format: date
        - name: search
          in: query
          description: Busca em t√≠tulo, descri√ß√£o e equipamento
          schema:
            type: string
      responses:
        '200':
          description: Lista de RNCs
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  rncs:
                    type: array
                    items:
                      $ref: '#/components/schemas/RNC'
                  total:
                    type: integer
                  page:
                    type: integer
                  per_page:
                    type: integer
                  total_pages:
                    type: integer

  /api/rnc/{id}:
    get:
      tags: [RNC]
      summary: Visualizar RNC
      description: Retorna detalhes completos de uma RNC espec√≠fica
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detalhes da RNC
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  rnc:
                    $ref: '#/components/schemas/RNC'
        '404':
          $ref: '#/components/responses/NotFoundError'

    put:
      tags: [RNC]
      summary: Editar RNC
      description: Atualiza dados de uma RNC existente (respeitando field locks)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RNCUpdate'
      responses:
        '200':
          description: RNC atualizada
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      tags: [RNC]
      summary: Deletar RNC
      description: Remove uma RNC (apenas admin)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: RNC deletada
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  # ==================== ADMIN ====================
  /api/admin/users:
    get:
      tags: [Admin]
      summary: Listar usu√°rios
      description: Retorna lista de todos os usu√°rios (apenas admin)
      responses:
        '200':
          description: Lista de usu√°rios
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

    post:
      tags: [Admin]
      summary: Criar usu√°rio
      description: Cria um novo usu√°rio no sistema (apenas admin)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Usu√°rio criado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user_id:
                    type: integer
                  message:
                    type: string

  /api/admin/field-locks/groups:
    get:
      tags: [Admin]
      summary: Obter configura√ß√£o de field locks
      description: Retorna configura√ß√£o de bloqueio de campos por grupo
      responses:
        '200':
          description: Configura√ß√£o de field locks
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  field_locks:
                    type: object
                    additionalProperties:
                      type: object
                      description: Campos bloqueados para cada grupo

  /api/admin/field-locks/save:
    post:
      tags: [Admin]
      summary: Salvar configura√ß√£o de field locks
      description: Atualiza configura√ß√£o de bloqueio de campos por grupo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                locked_fields:
                  type: array
                  items:
                    type: string
                  example: [title, description, equipment]
      responses:
        '200':
          description: Configura√ß√£o salva
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  # ==================== ANALYTICS ====================
  /api/charts/data:
    get:
      tags: [Analytics]
      summary: Dados para gr√°ficos
      description: Retorna dados agregados para dashboards e gr√°ficos
      parameters:
        - name: date_from
          in: query
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          schema:
            type: string
            format: date
        - name: department
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Dados de gr√°ficos
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      by_status:
                        type: object
                      by_priority:
                        type: object
                      by_month:
                        type: array
                        items:
                          type: object
                      by_department:
                        type: object

  /api/indicadores-detalhados:
    get:
      tags: [Analytics]
      summary: Indicadores KPI detalhados
      description: Retorna indicadores chave de performance do sistema
      responses:
        '200':
          description: KPIs do sistema
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  indicadores:
                    type: object
                    properties:
                      total_rncs:
                        type: integer
                      finalizadas:
                        type: integer
                      pendentes:
                        type: integer
                      taxa_conclusao:
                        type: number
                        format: float
                      tempo_medio_fechamento:
                        type: number
                        description: Em dias

  # ==================== REPORTS ====================
  /api/reports/finalized:
    get:
      tags: [Reports]
      summary: Relat√≥rio de RNCs finalizadas
      description: Gera relat√≥rio de RNCs finalizadas por per√≠odo
      parameters:
        - name: date_from
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: format
          in: query
          schema:
            type: string
            enum: [json, pdf, excel, csv]
            default: json
      responses:
        '200':
          description: Relat√≥rio gerado
          content:
            application/json:
              schema:
                type: object
            application/pdf:
              schema:
                type: string
                format: binary

# ==================== COMPONENTS ====================
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        department:
          type: string
        role:
          type: string
          enum: [admin, user]
        created_at:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time

    UserCreate:
      type: object
      required: [name, email, password, department]
      properties:
        name:
          type: string
          example: Jo√£o Silva
        email:
          type: string
          format: email
          example: joao@ippel.com.br
        password:
          type: string
          format: password
          minLength: 8
        department:
          type: string
          enum: [TI, Administra√ß√£o, Qualidade, Engenharia, Produ√ß√£o]
        role:
          type: string
          enum: [admin, user]
          default: user

    RNC:
      type: object
      properties:
        id:
          type: integer
        rnc_number:
          type: string
          example: RNC-2025-001
        title:
          type: string
        description:
          type: string
        equipment:
          type: string
        client:
          type: string
        priority:
          type: string
          enum: [Baixa, M√©dia, Alta, Cr√≠tica]
        status:
          type: string
          enum: [Pendente, Em Andamento, Finalizado]
        department:
          type: string
        created_by:
          type: integer
        created_at:
          type: string
          format: date-time
        finalized_at:
          type: string
          format: date-time
        disposition_usar:
          type: boolean
        disposition_retrabalhar:
          type: boolean
        disposition_rejeitar:
          type: boolean
        disposition_sucata:
          type: boolean
        inspection_approved:
          type: boolean
        inspection_rejected:
          type: boolean
        inspection_date:
          type: string
          format: date
        inspection_name:
          type: string
        engineering_date:
          type: string
          format: date
        engineering_name:
          type: string
        value:
          type: number
          format: float

    RNCCreate:
      type: object
      required: [title, description, equipment, client, priority]
      properties:
        title:
          type: string
          example: Problema na montagem
        description:
          type: string
          example: Componente XYZ instalado incorretamente
        equipment:
          type: string
          example: Chiller ABC-123
        client:
          type: string
          example: Empresa ABC Ltda
        priority:
          type: string
          enum: [Baixa, M√©dia, Alta, Cr√≠tica]
          default: M√©dia
        department:
          type: string
        instruction:
          type: string
        cause:
          type: string
        action:
          type: string

    RNCUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [Pendente, Em Andamento, Finalizado]
        priority:
          type: string
          enum: [Baixa, M√©dia, Alta, Cr√≠tica]
        disposition_usar:
          type: boolean
        inspection_approved:
          type: boolean
        inspection_name:
          type: string
        engineering_name:
          type: string

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Erro descritivo
        errors:
          type: array
          items:
            type: string

  responses:
    UnauthorizedError:
      description: Token inv√°lido ou ausente
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: Autentica√ß√£o necess√°ria

    ForbiddenError:
      description: Sem permiss√£o para esta opera√ß√£o
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: Voc√™ n√£o tem permiss√£o para esta a√ß√£o

    NotFoundError:
      description: Recurso n√£o encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: RNC n√£o encontrada

    BadRequestError:
      description: Requisi√ß√£o inv√°lida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: Dados inv√°lidos
            errors:
              - title: Campo obrigat√≥rio
              - priority: Valor inv√°lido

    RateLimitError:
      description: Limite de requisi√ß√µes excedido
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: Muitas requisi√ß√µes. Tente novamente em 60 segundos
